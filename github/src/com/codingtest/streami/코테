[주의사항] 문제를 다른 학생들에게 알려주거나 인터넷을 사용해 검색하는등 부정행위는 하지 마십시오.
결과보다는 과정이 중요하며 기본 코딩 스크리닝에 통과하지 못한다면 다음 단계 스크리닝에 통과하기 어렵습니다.
문제를 모두 푸는것 보다는 과정과 접근법 중심으로 보기 때문에 끝까지 포기하지 말고 풀이해 주십시오.
2시간 정도를 최종 목표로 잡고 풀어 주시기 바랍니다. 문제 풀이에 걸린 시간도 평가 요소입니다.
 
문법이나 정확한 함수의 사용은 평가 요소에 들어가지 않습니다.
IDE 사용하지 않고 Google Doc에서 직접 입력해 주시기 바랍니다.
 
함수명이 기억나지 않는다면 함수명을 풀어서 설명해도 됩니다.
ex) A[] -> A.정렬()
 
 
1. 정수 n이 주어졌을 때 7을 삽입해 만들 수 있는 가장 큰 숫자를 리턴하는 함수를 하나 구현하십시오.
정수 n은 -9999 <= n <= 9999 의 범위를 가집니다.

// 0. 음수 or  양수인지 먼저 확인
// 1. 자리수를 알아낸다.
// 2. 모든 자리 수에 7을 넣어서 가장 큰 숫자를 구함

function (int n){
	int max = 0;
	if( n >= 0) { // 양수인 경우
		max = Integer.MIN_VALUE;
		String str = Inteager.toString(n);
		int size = str.length(); // 자리수
		for(int i=0; i<size+1; i++){
		String temp = str.subString(0, i) + “7” + str.subString(i);
		int result = Integer.parseInt(temp);
		if( max < result) {
			max = result;
}
}
}
	else{ // 음수인 경우
		max = Integer.MAX_VALUE;
		String str = Inteager.toString(n);
		str = str.subString(1); // - 부호 없애기
		int size = str.length(); // 자리수
		for(int i=0; i<size+1; i++){
			String temp = str.subString(0,i) + “7” + str.subString(i);
			int result = Integer.parseInt(temp);
			if( max > result) {
				max = result
}
}
max  = max * (-1);
}
return max;
}

 
 
example
1294  -> 71294
-9123 -> -79123
 
2. "SAFFY JOB FAIR" 단어를 뒤집는 함수를 하나 구현하십시오. Split등 기본 라이브러리는 사용하실 수 없습니다.
기본 형변환 관련 함수는 사용하실 수 있습니다.
"SAFFY JOB FAIR" -> "FAIR JOB SAFFY"

// 1. 공백을 기준으로 자르기. 
// 2. 스택에 담기.
// 3. 하나씩 뽑아서 출력 while(!stack.isEmpty()){}
function (String str){ // str = “SSAFY JOB FAIR”;
	Stack<String> stack = new Stack<>();
	int size = str.length();
	int start = 0;
	for(int i=0; i<size; i++){
	if(str.charAt(i) == ‘ ’){
		stack.push(str.subString(start, i));
		start = i+1;
}
}
StringBuilder answer = new StringBuilder();
while(!stack.isEmpty()){
	answer.append(stack.pop()+“ ”);
}
return answer;
}

 
3. floatToString 함수를 구현하십시오.
필요한 가정은 스스로 하시기 바랍니다. 문제가 어려운 경우 integerToString으로 대체 해 풀어주시기 바랍니다.
 
example
10.23 -> "10.23"
-10.909 -> "-10.909"

// 1. 양수인지 음수인지 확인. 음수일 경우 -를 붙이고 시작.
// 2. num을 정수화 jungsu를 구함.
// 3. num - jungsu = 0 이면 jungsu 가 답임
// 4. num - jungsu != 0 이면 .을 붙인 후 원본과 정수를 10씩 곱해가면서 3.을 반복.-> cnt++
// 5. num * cnt - jungsu - cnt 가 소수점 이후의 숫자.


function(float num){
	StringBuilder result = new StringBuilder();
	
	if(num >= 0) { // 양수
		int jungsu = (int) num;
		if(num - jungsu == 0){
			result.append(jungsu);
		}else{
			result.append(jungsu);
			result.append(“.”);
			
			float temp = num;
			int cnt = 0,sosu= 0;
			while(true){
				cnt ++;
				temp = temp * 10;
				sosu = (int) temp;
				if(temp - sosu == 0){
					break;
				}
}
result.append(num*cnt - jungsu*cnt);
		}
}else{ // 음수
	float nNum = num * (-1)
	int jungsu = (int) nNum
		result.append(“-”);
		if(nNum - jungsu == 0){
			result.append(jungsu);
		}else{
			result.append(jungsu);
			result.append(“.”);
			
			float temp = nNum;
			int cnt = 0,sosu= 0;
			while(true){
				cnt ++;
				temp = temp * 10;
				sosu = (int) temp;
				if(temp - sosu == 0){
					break;
				}
}
result.append(nNum*cnt - jungsu*cnt);
		}
}
return result;
}





감사합니다.
